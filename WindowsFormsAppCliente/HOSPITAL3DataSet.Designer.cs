//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsAppCliente {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("HOSPITAL3DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class HOSPITAL3DataSet : global::System.Data.DataSet {
        
        private EMPLEADODataTable tableEMPLEADO;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public HOSPITAL3DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected HOSPITAL3DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EMPLEADO"] != null)) {
                    base.Tables.Add(new EMPLEADODataTable(ds.Tables["EMPLEADO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EMPLEADODataTable EMPLEADO {
            get {
                return this.tableEMPLEADO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            HOSPITAL3DataSet cln = ((HOSPITAL3DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EMPLEADO"] != null)) {
                    base.Tables.Add(new EMPLEADODataTable(ds.Tables["EMPLEADO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEMPLEADO = ((EMPLEADODataTable)(base.Tables["EMPLEADO"]));
            if ((initTable == true)) {
                if ((this.tableEMPLEADO != null)) {
                    this.tableEMPLEADO.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "HOSPITAL3DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/HOSPITAL3DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEMPLEADO = new EMPLEADODataTable();
            base.Tables.Add(this.tableEMPLEADO);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEMPLEADO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            HOSPITAL3DataSet ds = new HOSPITAL3DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EMPLEADORowChangeEventHandler(object sender, EMPLEADORowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EMPLEADODataTable : global::System.Data.TypedTableBase<EMPLEADORow> {
            
            private global::System.Data.DataColumn columnCED_EMP;
            
            private global::System.Data.DataColumn columnNOM1_EMP;
            
            private global::System.Data.DataColumn columnNOM2_EMP;
            
            private global::System.Data.DataColumn columnAPE1_EMP;
            
            private global::System.Data.DataColumn columnAPE2_EMP;
            
            private global::System.Data.DataColumn columnGEN_EMP_P;
            
            private global::System.Data.DataColumn columnFECH_NAC_EMP;
            
            private global::System.Data.DataColumn columnCOD_CIU_P;
            
            private global::System.Data.DataColumn columnDIR_EMP;
            
            private global::System.Data.DataColumn columnTEL_EMP;
            
            private global::System.Data.DataColumn columnCOD_ETN_P;
            
            private global::System.Data.DataColumn columnCOD_EST_CIV_P;
            
            private global::System.Data.DataColumn columnNOM_USU;
            
            private global::System.Data.DataColumn columnCLAVE_USU;
            
            private global::System.Data.DataColumn columnTIPO_USU_P;
            
            private global::System.Data.DataColumn columnCOD_CAR_P;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPLEADODataTable() {
                this.TableName = "EMPLEADO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EMPLEADODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EMPLEADODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CED_EMPColumn {
                get {
                    return this.columnCED_EMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOM1_EMPColumn {
                get {
                    return this.columnNOM1_EMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOM2_EMPColumn {
                get {
                    return this.columnNOM2_EMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APE1_EMPColumn {
                get {
                    return this.columnAPE1_EMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APE2_EMPColumn {
                get {
                    return this.columnAPE2_EMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GEN_EMP_PColumn {
                get {
                    return this.columnGEN_EMP_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FECH_NAC_EMPColumn {
                get {
                    return this.columnFECH_NAC_EMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COD_CIU_PColumn {
                get {
                    return this.columnCOD_CIU_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIR_EMPColumn {
                get {
                    return this.columnDIR_EMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TEL_EMPColumn {
                get {
                    return this.columnTEL_EMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COD_ETN_PColumn {
                get {
                    return this.columnCOD_ETN_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COD_EST_CIV_PColumn {
                get {
                    return this.columnCOD_EST_CIV_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOM_USUColumn {
                get {
                    return this.columnNOM_USU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLAVE_USUColumn {
                get {
                    return this.columnCLAVE_USU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIPO_USU_PColumn {
                get {
                    return this.columnTIPO_USU_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COD_CAR_PColumn {
                get {
                    return this.columnCOD_CAR_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPLEADORow this[int index] {
                get {
                    return ((EMPLEADORow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMPLEADORowChangeEventHandler EMPLEADORowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMPLEADORowChangeEventHandler EMPLEADORowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMPLEADORowChangeEventHandler EMPLEADORowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMPLEADORowChangeEventHandler EMPLEADORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEMPLEADORow(EMPLEADORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPLEADORow AddEMPLEADORow(
                        string CED_EMP, 
                        string NOM1_EMP, 
                        string NOM2_EMP, 
                        string APE1_EMP, 
                        string APE2_EMP, 
                        int GEN_EMP_P, 
                        string FECH_NAC_EMP, 
                        string COD_CIU_P, 
                        string DIR_EMP, 
                        string TEL_EMP, 
                        string COD_ETN_P, 
                        string COD_EST_CIV_P, 
                        string NOM_USU, 
                        string CLAVE_USU, 
                        string TIPO_USU_P, 
                        string COD_CAR_P) {
                EMPLEADORow rowEMPLEADORow = ((EMPLEADORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CED_EMP,
                        NOM1_EMP,
                        NOM2_EMP,
                        APE1_EMP,
                        APE2_EMP,
                        GEN_EMP_P,
                        FECH_NAC_EMP,
                        COD_CIU_P,
                        DIR_EMP,
                        TEL_EMP,
                        COD_ETN_P,
                        COD_EST_CIV_P,
                        NOM_USU,
                        CLAVE_USU,
                        TIPO_USU_P,
                        COD_CAR_P};
                rowEMPLEADORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEMPLEADORow);
                return rowEMPLEADORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPLEADORow FindByCED_EMP(string CED_EMP) {
                return ((EMPLEADORow)(this.Rows.Find(new object[] {
                            CED_EMP})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EMPLEADODataTable cln = ((EMPLEADODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EMPLEADODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCED_EMP = base.Columns["CED_EMP"];
                this.columnNOM1_EMP = base.Columns["NOM1_EMP"];
                this.columnNOM2_EMP = base.Columns["NOM2_EMP"];
                this.columnAPE1_EMP = base.Columns["APE1_EMP"];
                this.columnAPE2_EMP = base.Columns["APE2_EMP"];
                this.columnGEN_EMP_P = base.Columns["GEN_EMP_P"];
                this.columnFECH_NAC_EMP = base.Columns["FECH_NAC_EMP"];
                this.columnCOD_CIU_P = base.Columns["COD_CIU_P"];
                this.columnDIR_EMP = base.Columns["DIR_EMP"];
                this.columnTEL_EMP = base.Columns["TEL_EMP"];
                this.columnCOD_ETN_P = base.Columns["COD_ETN_P"];
                this.columnCOD_EST_CIV_P = base.Columns["COD_EST_CIV_P"];
                this.columnNOM_USU = base.Columns["NOM_USU"];
                this.columnCLAVE_USU = base.Columns["CLAVE_USU"];
                this.columnTIPO_USU_P = base.Columns["TIPO_USU_P"];
                this.columnCOD_CAR_P = base.Columns["COD_CAR_P"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCED_EMP = new global::System.Data.DataColumn("CED_EMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCED_EMP);
                this.columnNOM1_EMP = new global::System.Data.DataColumn("NOM1_EMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOM1_EMP);
                this.columnNOM2_EMP = new global::System.Data.DataColumn("NOM2_EMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOM2_EMP);
                this.columnAPE1_EMP = new global::System.Data.DataColumn("APE1_EMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPE1_EMP);
                this.columnAPE2_EMP = new global::System.Data.DataColumn("APE2_EMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPE2_EMP);
                this.columnGEN_EMP_P = new global::System.Data.DataColumn("GEN_EMP_P", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEN_EMP_P);
                this.columnFECH_NAC_EMP = new global::System.Data.DataColumn("FECH_NAC_EMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECH_NAC_EMP);
                this.columnCOD_CIU_P = new global::System.Data.DataColumn("COD_CIU_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOD_CIU_P);
                this.columnDIR_EMP = new global::System.Data.DataColumn("DIR_EMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIR_EMP);
                this.columnTEL_EMP = new global::System.Data.DataColumn("TEL_EMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL_EMP);
                this.columnCOD_ETN_P = new global::System.Data.DataColumn("COD_ETN_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOD_ETN_P);
                this.columnCOD_EST_CIV_P = new global::System.Data.DataColumn("COD_EST_CIV_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOD_EST_CIV_P);
                this.columnNOM_USU = new global::System.Data.DataColumn("NOM_USU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOM_USU);
                this.columnCLAVE_USU = new global::System.Data.DataColumn("CLAVE_USU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLAVE_USU);
                this.columnTIPO_USU_P = new global::System.Data.DataColumn("TIPO_USU_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_USU_P);
                this.columnCOD_CAR_P = new global::System.Data.DataColumn("COD_CAR_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOD_CAR_P);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCED_EMP}, true));
                this.columnCED_EMP.AllowDBNull = false;
                this.columnCED_EMP.Unique = true;
                this.columnCED_EMP.MaxLength = 10;
                this.columnNOM1_EMP.AllowDBNull = false;
                this.columnNOM1_EMP.MaxLength = 10;
                this.columnNOM2_EMP.AllowDBNull = false;
                this.columnNOM2_EMP.MaxLength = 10;
                this.columnAPE1_EMP.AllowDBNull = false;
                this.columnAPE1_EMP.MaxLength = 10;
                this.columnAPE2_EMP.AllowDBNull = false;
                this.columnAPE2_EMP.MaxLength = 10;
                this.columnGEN_EMP_P.AllowDBNull = false;
                this.columnFECH_NAC_EMP.AllowDBNull = false;
                this.columnFECH_NAC_EMP.MaxLength = 10;
                this.columnCOD_CIU_P.AllowDBNull = false;
                this.columnCOD_CIU_P.MaxLength = 10;
                this.columnDIR_EMP.AllowDBNull = false;
                this.columnDIR_EMP.MaxLength = 10;
                this.columnTEL_EMP.MaxLength = 15;
                this.columnCOD_ETN_P.AllowDBNull = false;
                this.columnCOD_ETN_P.MaxLength = 10;
                this.columnCOD_EST_CIV_P.AllowDBNull = false;
                this.columnCOD_EST_CIV_P.MaxLength = 10;
                this.columnNOM_USU.MaxLength = 20;
                this.columnCLAVE_USU.AllowDBNull = false;
                this.columnCLAVE_USU.MaxLength = 20;
                this.columnTIPO_USU_P.AllowDBNull = false;
                this.columnTIPO_USU_P.MaxLength = 10;
                this.columnCOD_CAR_P.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPLEADORow NewEMPLEADORow() {
                return ((EMPLEADORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EMPLEADORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EMPLEADORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EMPLEADORowChanged != null)) {
                    this.EMPLEADORowChanged(this, new EMPLEADORowChangeEvent(((EMPLEADORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EMPLEADORowChanging != null)) {
                    this.EMPLEADORowChanging(this, new EMPLEADORowChangeEvent(((EMPLEADORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EMPLEADORowDeleted != null)) {
                    this.EMPLEADORowDeleted(this, new EMPLEADORowChangeEvent(((EMPLEADORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EMPLEADORowDeleting != null)) {
                    this.EMPLEADORowDeleting(this, new EMPLEADORowChangeEvent(((EMPLEADORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEMPLEADORow(EMPLEADORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                HOSPITAL3DataSet ds = new HOSPITAL3DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EMPLEADODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EMPLEADORow : global::System.Data.DataRow {
            
            private EMPLEADODataTable tableEMPLEADO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EMPLEADORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEMPLEADO = ((EMPLEADODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CED_EMP {
                get {
                    return ((string)(this[this.tableEMPLEADO.CED_EMPColumn]));
                }
                set {
                    this[this.tableEMPLEADO.CED_EMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOM1_EMP {
                get {
                    return ((string)(this[this.tableEMPLEADO.NOM1_EMPColumn]));
                }
                set {
                    this[this.tableEMPLEADO.NOM1_EMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOM2_EMP {
                get {
                    return ((string)(this[this.tableEMPLEADO.NOM2_EMPColumn]));
                }
                set {
                    this[this.tableEMPLEADO.NOM2_EMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APE1_EMP {
                get {
                    return ((string)(this[this.tableEMPLEADO.APE1_EMPColumn]));
                }
                set {
                    this[this.tableEMPLEADO.APE1_EMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APE2_EMP {
                get {
                    return ((string)(this[this.tableEMPLEADO.APE2_EMPColumn]));
                }
                set {
                    this[this.tableEMPLEADO.APE2_EMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GEN_EMP_P {
                get {
                    return ((int)(this[this.tableEMPLEADO.GEN_EMP_PColumn]));
                }
                set {
                    this[this.tableEMPLEADO.GEN_EMP_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FECH_NAC_EMP {
                get {
                    return ((string)(this[this.tableEMPLEADO.FECH_NAC_EMPColumn]));
                }
                set {
                    this[this.tableEMPLEADO.FECH_NAC_EMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COD_CIU_P {
                get {
                    return ((string)(this[this.tableEMPLEADO.COD_CIU_PColumn]));
                }
                set {
                    this[this.tableEMPLEADO.COD_CIU_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DIR_EMP {
                get {
                    return ((string)(this[this.tableEMPLEADO.DIR_EMPColumn]));
                }
                set {
                    this[this.tableEMPLEADO.DIR_EMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEL_EMP {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADO.TEL_EMPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEL_EMP\' in table \'EMPLEADO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADO.TEL_EMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COD_ETN_P {
                get {
                    return ((string)(this[this.tableEMPLEADO.COD_ETN_PColumn]));
                }
                set {
                    this[this.tableEMPLEADO.COD_ETN_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COD_EST_CIV_P {
                get {
                    return ((string)(this[this.tableEMPLEADO.COD_EST_CIV_PColumn]));
                }
                set {
                    this[this.tableEMPLEADO.COD_EST_CIV_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOM_USU {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADO.NOM_USUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOM_USU\' in table \'EMPLEADO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADO.NOM_USUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLAVE_USU {
                get {
                    return ((string)(this[this.tableEMPLEADO.CLAVE_USUColumn]));
                }
                set {
                    this[this.tableEMPLEADO.CLAVE_USUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TIPO_USU_P {
                get {
                    return ((string)(this[this.tableEMPLEADO.TIPO_USU_PColumn]));
                }
                set {
                    this[this.tableEMPLEADO.TIPO_USU_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COD_CAR_P {
                get {
                    try {
                        return ((string)(this[this.tableEMPLEADO.COD_CAR_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COD_CAR_P\' in table \'EMPLEADO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEMPLEADO.COD_CAR_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTEL_EMPNull() {
                return this.IsNull(this.tableEMPLEADO.TEL_EMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTEL_EMPNull() {
                this[this.tableEMPLEADO.TEL_EMPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNOM_USUNull() {
                return this.IsNull(this.tableEMPLEADO.NOM_USUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNOM_USUNull() {
                this[this.tableEMPLEADO.NOM_USUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOD_CAR_PNull() {
                return this.IsNull(this.tableEMPLEADO.COD_CAR_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOD_CAR_PNull() {
                this[this.tableEMPLEADO.COD_CAR_PColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EMPLEADORowChangeEvent : global::System.EventArgs {
            
            private EMPLEADORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPLEADORowChangeEvent(EMPLEADORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPLEADORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WindowsFormsAppCliente.HOSPITAL3DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EMPLEADOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EMPLEADOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EMPLEADO";
            tableMapping.ColumnMappings.Add("CED_EMP", "CED_EMP");
            tableMapping.ColumnMappings.Add("NOM1_EMP", "NOM1_EMP");
            tableMapping.ColumnMappings.Add("NOM2_EMP", "NOM2_EMP");
            tableMapping.ColumnMappings.Add("APE1_EMP", "APE1_EMP");
            tableMapping.ColumnMappings.Add("APE2_EMP", "APE2_EMP");
            tableMapping.ColumnMappings.Add("GEN_EMP_P", "GEN_EMP_P");
            tableMapping.ColumnMappings.Add("FECH_NAC_EMP", "FECH_NAC_EMP");
            tableMapping.ColumnMappings.Add("COD_CIU_P", "COD_CIU_P");
            tableMapping.ColumnMappings.Add("DIR_EMP", "DIR_EMP");
            tableMapping.ColumnMappings.Add("TEL_EMP", "TEL_EMP");
            tableMapping.ColumnMappings.Add("COD_ETN_P", "COD_ETN_P");
            tableMapping.ColumnMappings.Add("COD_EST_CIV_P", "COD_EST_CIV_P");
            tableMapping.ColumnMappings.Add("NOM_USU", "NOM_USU");
            tableMapping.ColumnMappings.Add("CLAVE_USU", "CLAVE_USU");
            tableMapping.ColumnMappings.Add("TIPO_USU_P", "TIPO_USU_P");
            tableMapping.ColumnMappings.Add("COD_CAR_P", "COD_CAR_P");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[EMPLEADO] WHERE (([CED_EMP] = @Original_CED_EMP) AND ([NOM1_EMP] = @Original_NOM1_EMP) AND ([NOM2_EMP] = @Original_NOM2_EMP) AND ([APE1_EMP] = @Original_APE1_EMP) AND ([APE2_EMP] = @Original_APE2_EMP) AND ([GEN_EMP_P] = @Original_GEN_EMP_P) AND ([FECH_NAC_EMP] = @Original_FECH_NAC_EMP) AND ([COD_CIU_P] = @Original_COD_CIU_P) AND ([DIR_EMP] = @Original_DIR_EMP) AND ((@IsNull_TEL_EMP = 1 AND [TEL_EMP] IS NULL) OR ([TEL_EMP] = @Original_TEL_EMP)) AND ([COD_ETN_P] = @Original_COD_ETN_P) AND ([COD_EST_CIV_P] = @Original_COD_EST_CIV_P) AND ((@IsNull_NOM_USU = 1 AND [NOM_USU] IS NULL) OR ([NOM_USU] = @Original_NOM_USU)) AND ([CLAVE_USU] = @Original_CLAVE_USU) AND ([TIPO_USU_P] = @Original_TIPO_USU_P) AND ((@IsNull_COD_CAR_P = 1 AND [COD_CAR_P] IS NULL) OR ([COD_CAR_P] = @Original_COD_CAR_P)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CED_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CED_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOM1_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM1_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOM2_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM2_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APE1_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APE1_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APE2_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APE2_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GEN_EMP_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN_EMP_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FECH_NAC_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECH_NAC_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COD_CIU_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CIU_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DIR_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIR_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEL_EMP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_EMP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COD_ETN_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_ETN_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COD_EST_CIV_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_EST_CIV_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NOM_USU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM_USU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOM_USU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM_USU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLAVE_USU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLAVE_USU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIPO_USU_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_USU_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COD_CAR_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CAR_P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COD_CAR_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CAR_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[EMPLEADO] ([CED_EMP], [NOM1_EMP], [NOM2_EMP], [APE1_EMP], [APE2_EMP], [GEN_EMP_P], [FECH_NAC_EMP], [COD_CIU_P], [DIR_EMP], [TEL_EMP], [COD_ETN_P], [COD_EST_CIV_P], [NOM_USU], [CLAVE_USU], [TIPO_USU_P], [COD_CAR_P]) VALUES (@CED_EMP, @NOM1_EMP, @NOM2_EMP, @APE1_EMP, @APE2_EMP, @GEN_EMP_P, @FECH_NAC_EMP, @COD_CIU_P, @DIR_EMP, @TEL_EMP, @COD_ETN_P, @COD_EST_CIV_P, @NOM_USU, @CLAVE_USU, @TIPO_USU_P, @COD_CAR_P);
SELECT CED_EMP, NOM1_EMP, NOM2_EMP, APE1_EMP, APE2_EMP, GEN_EMP_P, FECH_NAC_EMP, COD_CIU_P, DIR_EMP, TEL_EMP, COD_ETN_P, COD_EST_CIV_P, NOM_USU, CLAVE_USU, TIPO_USU_P, COD_CAR_P FROM EMPLEADO WHERE (CED_EMP = @CED_EMP)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CED_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CED_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOM1_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM1_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOM2_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM2_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APE1_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APE1_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APE2_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APE2_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_EMP_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN_EMP_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FECH_NAC_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECH_NAC_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COD_CIU_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CIU_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIR_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIR_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COD_ETN_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_ETN_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COD_EST_CIV_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_EST_CIV_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOM_USU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM_USU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLAVE_USU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLAVE_USU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIPO_USU_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_USU_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COD_CAR_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CAR_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[EMPLEADO] SET [CED_EMP] = @CED_EMP, [NOM1_EMP] = @NOM1_EMP, [NOM2_EMP] = @NOM2_EMP, [APE1_EMP] = @APE1_EMP, [APE2_EMP] = @APE2_EMP, [GEN_EMP_P] = @GEN_EMP_P, [FECH_NAC_EMP] = @FECH_NAC_EMP, [COD_CIU_P] = @COD_CIU_P, [DIR_EMP] = @DIR_EMP, [TEL_EMP] = @TEL_EMP, [COD_ETN_P] = @COD_ETN_P, [COD_EST_CIV_P] = @COD_EST_CIV_P, [NOM_USU] = @NOM_USU, [CLAVE_USU] = @CLAVE_USU, [TIPO_USU_P] = @TIPO_USU_P, [COD_CAR_P] = @COD_CAR_P WHERE (([CED_EMP] = @Original_CED_EMP) AND ([NOM1_EMP] = @Original_NOM1_EMP) AND ([NOM2_EMP] = @Original_NOM2_EMP) AND ([APE1_EMP] = @Original_APE1_EMP) AND ([APE2_EMP] = @Original_APE2_EMP) AND ([GEN_EMP_P] = @Original_GEN_EMP_P) AND ([FECH_NAC_EMP] = @Original_FECH_NAC_EMP) AND ([COD_CIU_P] = @Original_COD_CIU_P) AND ([DIR_EMP] = @Original_DIR_EMP) AND ((@IsNull_TEL_EMP = 1 AND [TEL_EMP] IS NULL) OR ([TEL_EMP] = @Original_TEL_EMP)) AND ([COD_ETN_P] = @Original_COD_ETN_P) AND ([COD_EST_CIV_P] = @Original_COD_EST_CIV_P) AND ((@IsNull_NOM_USU = 1 AND [NOM_USU] IS NULL) OR ([NOM_USU] = @Original_NOM_USU)) AND ([CLAVE_USU] = @Original_CLAVE_USU) AND ([TIPO_USU_P] = @Original_TIPO_USU_P) AND ((@IsNull_COD_CAR_P = 1 AND [COD_CAR_P] IS NULL) OR ([COD_CAR_P] = @Original_COD_CAR_P)));
SELECT CED_EMP, NOM1_EMP, NOM2_EMP, APE1_EMP, APE2_EMP, GEN_EMP_P, FECH_NAC_EMP, COD_CIU_P, DIR_EMP, TEL_EMP, COD_ETN_P, COD_EST_CIV_P, NOM_USU, CLAVE_USU, TIPO_USU_P, COD_CAR_P FROM EMPLEADO WHERE (CED_EMP = @CED_EMP)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CED_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CED_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOM1_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM1_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOM2_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM2_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APE1_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APE1_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APE2_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APE2_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GEN_EMP_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN_EMP_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FECH_NAC_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECH_NAC_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COD_CIU_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CIU_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIR_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIR_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_EMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COD_ETN_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_ETN_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COD_EST_CIV_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_EST_CIV_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOM_USU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM_USU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLAVE_USU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLAVE_USU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIPO_USU_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_USU_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COD_CAR_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CAR_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CED_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CED_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOM1_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM1_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOM2_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM2_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APE1_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APE1_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APE2_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APE2_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GEN_EMP_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GEN_EMP_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FECH_NAC_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FECH_NAC_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COD_CIU_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CIU_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DIR_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DIR_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEL_EMP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_EMP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL_EMP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_EMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COD_ETN_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_ETN_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COD_EST_CIV_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_EST_CIV_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NOM_USU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM_USU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOM_USU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOM_USU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLAVE_USU", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLAVE_USU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIPO_USU_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_USU_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COD_CAR_P", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CAR_P", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COD_CAR_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COD_CAR_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsAppCliente.Properties.Settings.Default.NorthwindConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CED_EMP, NOM1_EMP, NOM2_EMP, APE1_EMP, APE2_EMP, GEN_EMP_P, FECH_NAC_EMP, " +
                "COD_CIU_P, DIR_EMP, TEL_EMP, COD_ETN_P, COD_EST_CIV_P, NOM_USU, CLAVE_USU, TIPO_" +
                "USU_P, COD_CAR_P FROM dbo.EMPLEADO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(HOSPITAL3DataSet.EMPLEADODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual HOSPITAL3DataSet.EMPLEADODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            HOSPITAL3DataSet.EMPLEADODataTable dataTable = new HOSPITAL3DataSet.EMPLEADODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HOSPITAL3DataSet.EMPLEADODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(HOSPITAL3DataSet dataSet) {
            return this.Adapter.Update(dataSet, "EMPLEADO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_CED_EMP, 
                    string Original_NOM1_EMP, 
                    string Original_NOM2_EMP, 
                    string Original_APE1_EMP, 
                    string Original_APE2_EMP, 
                    int Original_GEN_EMP_P, 
                    string Original_FECH_NAC_EMP, 
                    string Original_COD_CIU_P, 
                    string Original_DIR_EMP, 
                    string Original_TEL_EMP, 
                    string Original_COD_ETN_P, 
                    string Original_COD_EST_CIV_P, 
                    string Original_NOM_USU, 
                    string Original_CLAVE_USU, 
                    string Original_TIPO_USU_P, 
                    string Original_COD_CAR_P) {
            if ((Original_CED_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_CED_EMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CED_EMP));
            }
            if ((Original_NOM1_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_NOM1_EMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NOM1_EMP));
            }
            if ((Original_NOM2_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_NOM2_EMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NOM2_EMP));
            }
            if ((Original_APE1_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_APE1_EMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_APE1_EMP));
            }
            if ((Original_APE2_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_APE2_EMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_APE2_EMP));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_GEN_EMP_P));
            if ((Original_FECH_NAC_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_FECH_NAC_EMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_FECH_NAC_EMP));
            }
            if ((Original_COD_CIU_P == null)) {
                throw new global::System.ArgumentNullException("Original_COD_CIU_P");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_COD_CIU_P));
            }
            if ((Original_DIR_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_DIR_EMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DIR_EMP));
            }
            if ((Original_TEL_EMP == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_TEL_EMP));
            }
            if ((Original_COD_ETN_P == null)) {
                throw new global::System.ArgumentNullException("Original_COD_ETN_P");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_COD_ETN_P));
            }
            if ((Original_COD_EST_CIV_P == null)) {
                throw new global::System.ArgumentNullException("Original_COD_EST_CIV_P");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_COD_EST_CIV_P));
            }
            if ((Original_NOM_USU == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_NOM_USU));
            }
            if ((Original_CLAVE_USU == null)) {
                throw new global::System.ArgumentNullException("Original_CLAVE_USU");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_CLAVE_USU));
            }
            if ((Original_TIPO_USU_P == null)) {
                throw new global::System.ArgumentNullException("Original_TIPO_USU_P");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_TIPO_USU_P));
            }
            if ((Original_COD_CAR_P == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_COD_CAR_P));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CED_EMP, 
                    string NOM1_EMP, 
                    string NOM2_EMP, 
                    string APE1_EMP, 
                    string APE2_EMP, 
                    int GEN_EMP_P, 
                    string FECH_NAC_EMP, 
                    string COD_CIU_P, 
                    string DIR_EMP, 
                    string TEL_EMP, 
                    string COD_ETN_P, 
                    string COD_EST_CIV_P, 
                    string NOM_USU, 
                    string CLAVE_USU, 
                    string TIPO_USU_P, 
                    string COD_CAR_P) {
            if ((CED_EMP == null)) {
                throw new global::System.ArgumentNullException("CED_EMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CED_EMP));
            }
            if ((NOM1_EMP == null)) {
                throw new global::System.ArgumentNullException("NOM1_EMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NOM1_EMP));
            }
            if ((NOM2_EMP == null)) {
                throw new global::System.ArgumentNullException("NOM2_EMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NOM2_EMP));
            }
            if ((APE1_EMP == null)) {
                throw new global::System.ArgumentNullException("APE1_EMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(APE1_EMP));
            }
            if ((APE2_EMP == null)) {
                throw new global::System.ArgumentNullException("APE2_EMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(APE2_EMP));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(GEN_EMP_P));
            if ((FECH_NAC_EMP == null)) {
                throw new global::System.ArgumentNullException("FECH_NAC_EMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(FECH_NAC_EMP));
            }
            if ((COD_CIU_P == null)) {
                throw new global::System.ArgumentNullException("COD_CIU_P");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(COD_CIU_P));
            }
            if ((DIR_EMP == null)) {
                throw new global::System.ArgumentNullException("DIR_EMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(DIR_EMP));
            }
            if ((TEL_EMP == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(TEL_EMP));
            }
            if ((COD_ETN_P == null)) {
                throw new global::System.ArgumentNullException("COD_ETN_P");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(COD_ETN_P));
            }
            if ((COD_EST_CIV_P == null)) {
                throw new global::System.ArgumentNullException("COD_EST_CIV_P");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(COD_EST_CIV_P));
            }
            if ((NOM_USU == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(NOM_USU));
            }
            if ((CLAVE_USU == null)) {
                throw new global::System.ArgumentNullException("CLAVE_USU");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CLAVE_USU));
            }
            if ((TIPO_USU_P == null)) {
                throw new global::System.ArgumentNullException("TIPO_USU_P");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(TIPO_USU_P));
            }
            if ((COD_CAR_P == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(COD_CAR_P));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CED_EMP, 
                    string NOM1_EMP, 
                    string NOM2_EMP, 
                    string APE1_EMP, 
                    string APE2_EMP, 
                    int GEN_EMP_P, 
                    string FECH_NAC_EMP, 
                    string COD_CIU_P, 
                    string DIR_EMP, 
                    string TEL_EMP, 
                    string COD_ETN_P, 
                    string COD_EST_CIV_P, 
                    string NOM_USU, 
                    string CLAVE_USU, 
                    string TIPO_USU_P, 
                    string COD_CAR_P, 
                    string Original_CED_EMP, 
                    string Original_NOM1_EMP, 
                    string Original_NOM2_EMP, 
                    string Original_APE1_EMP, 
                    string Original_APE2_EMP, 
                    int Original_GEN_EMP_P, 
                    string Original_FECH_NAC_EMP, 
                    string Original_COD_CIU_P, 
                    string Original_DIR_EMP, 
                    string Original_TEL_EMP, 
                    string Original_COD_ETN_P, 
                    string Original_COD_EST_CIV_P, 
                    string Original_NOM_USU, 
                    string Original_CLAVE_USU, 
                    string Original_TIPO_USU_P, 
                    string Original_COD_CAR_P) {
            if ((CED_EMP == null)) {
                throw new global::System.ArgumentNullException("CED_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CED_EMP));
            }
            if ((NOM1_EMP == null)) {
                throw new global::System.ArgumentNullException("NOM1_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NOM1_EMP));
            }
            if ((NOM2_EMP == null)) {
                throw new global::System.ArgumentNullException("NOM2_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NOM2_EMP));
            }
            if ((APE1_EMP == null)) {
                throw new global::System.ArgumentNullException("APE1_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(APE1_EMP));
            }
            if ((APE2_EMP == null)) {
                throw new global::System.ArgumentNullException("APE2_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(APE2_EMP));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(GEN_EMP_P));
            if ((FECH_NAC_EMP == null)) {
                throw new global::System.ArgumentNullException("FECH_NAC_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(FECH_NAC_EMP));
            }
            if ((COD_CIU_P == null)) {
                throw new global::System.ArgumentNullException("COD_CIU_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(COD_CIU_P));
            }
            if ((DIR_EMP == null)) {
                throw new global::System.ArgumentNullException("DIR_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(DIR_EMP));
            }
            if ((TEL_EMP == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(TEL_EMP));
            }
            if ((COD_ETN_P == null)) {
                throw new global::System.ArgumentNullException("COD_ETN_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(COD_ETN_P));
            }
            if ((COD_EST_CIV_P == null)) {
                throw new global::System.ArgumentNullException("COD_EST_CIV_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(COD_EST_CIV_P));
            }
            if ((NOM_USU == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(NOM_USU));
            }
            if ((CLAVE_USU == null)) {
                throw new global::System.ArgumentNullException("CLAVE_USU");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CLAVE_USU));
            }
            if ((TIPO_USU_P == null)) {
                throw new global::System.ArgumentNullException("TIPO_USU_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(TIPO_USU_P));
            }
            if ((COD_CAR_P == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(COD_CAR_P));
            }
            if ((Original_CED_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_CED_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_CED_EMP));
            }
            if ((Original_NOM1_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_NOM1_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_NOM1_EMP));
            }
            if ((Original_NOM2_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_NOM2_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_NOM2_EMP));
            }
            if ((Original_APE1_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_APE1_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_APE1_EMP));
            }
            if ((Original_APE2_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_APE2_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_APE2_EMP));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_GEN_EMP_P));
            if ((Original_FECH_NAC_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_FECH_NAC_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_FECH_NAC_EMP));
            }
            if ((Original_COD_CIU_P == null)) {
                throw new global::System.ArgumentNullException("Original_COD_CIU_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_COD_CIU_P));
            }
            if ((Original_DIR_EMP == null)) {
                throw new global::System.ArgumentNullException("Original_DIR_EMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_DIR_EMP));
            }
            if ((Original_TEL_EMP == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_TEL_EMP));
            }
            if ((Original_COD_ETN_P == null)) {
                throw new global::System.ArgumentNullException("Original_COD_ETN_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_COD_ETN_P));
            }
            if ((Original_COD_EST_CIV_P == null)) {
                throw new global::System.ArgumentNullException("Original_COD_EST_CIV_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_COD_EST_CIV_P));
            }
            if ((Original_NOM_USU == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_NOM_USU));
            }
            if ((Original_CLAVE_USU == null)) {
                throw new global::System.ArgumentNullException("Original_CLAVE_USU");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_CLAVE_USU));
            }
            if ((Original_TIPO_USU_P == null)) {
                throw new global::System.ArgumentNullException("Original_TIPO_USU_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_TIPO_USU_P));
            }
            if ((Original_COD_CAR_P == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_COD_CAR_P));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOM1_EMP, 
                    string NOM2_EMP, 
                    string APE1_EMP, 
                    string APE2_EMP, 
                    int GEN_EMP_P, 
                    string FECH_NAC_EMP, 
                    string COD_CIU_P, 
                    string DIR_EMP, 
                    string TEL_EMP, 
                    string COD_ETN_P, 
                    string COD_EST_CIV_P, 
                    string NOM_USU, 
                    string CLAVE_USU, 
                    string TIPO_USU_P, 
                    string COD_CAR_P, 
                    string Original_CED_EMP, 
                    string Original_NOM1_EMP, 
                    string Original_NOM2_EMP, 
                    string Original_APE1_EMP, 
                    string Original_APE2_EMP, 
                    int Original_GEN_EMP_P, 
                    string Original_FECH_NAC_EMP, 
                    string Original_COD_CIU_P, 
                    string Original_DIR_EMP, 
                    string Original_TEL_EMP, 
                    string Original_COD_ETN_P, 
                    string Original_COD_EST_CIV_P, 
                    string Original_NOM_USU, 
                    string Original_CLAVE_USU, 
                    string Original_TIPO_USU_P, 
                    string Original_COD_CAR_P) {
            return this.Update(Original_CED_EMP, NOM1_EMP, NOM2_EMP, APE1_EMP, APE2_EMP, GEN_EMP_P, FECH_NAC_EMP, COD_CIU_P, DIR_EMP, TEL_EMP, COD_ETN_P, COD_EST_CIV_P, NOM_USU, CLAVE_USU, TIPO_USU_P, COD_CAR_P, Original_CED_EMP, Original_NOM1_EMP, Original_NOM2_EMP, Original_APE1_EMP, Original_APE2_EMP, Original_GEN_EMP_P, Original_FECH_NAC_EMP, Original_COD_CIU_P, Original_DIR_EMP, Original_TEL_EMP, Original_COD_ETN_P, Original_COD_EST_CIV_P, Original_NOM_USU, Original_CLAVE_USU, Original_TIPO_USU_P, Original_COD_CAR_P);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EMPLEADOTableAdapter _eMPLEADOTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EMPLEADOTableAdapter EMPLEADOTableAdapter {
            get {
                return this._eMPLEADOTableAdapter;
            }
            set {
                this._eMPLEADOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._eMPLEADOTableAdapter != null) 
                            && (this._eMPLEADOTableAdapter.Connection != null))) {
                    return this._eMPLEADOTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._eMPLEADOTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(HOSPITAL3DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eMPLEADOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EMPLEADO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eMPLEADOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(HOSPITAL3DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eMPLEADOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EMPLEADO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eMPLEADOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(HOSPITAL3DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._eMPLEADOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EMPLEADO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eMPLEADOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(HOSPITAL3DataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._eMPLEADOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eMPLEADOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._eMPLEADOTableAdapter != null)) {
                    revertConnections.Add(this._eMPLEADOTableAdapter, this._eMPLEADOTableAdapter.Connection);
                    this._eMPLEADOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eMPLEADOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eMPLEADOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eMPLEADOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eMPLEADOTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._eMPLEADOTableAdapter != null)) {
                    this._eMPLEADOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eMPLEADOTableAdapter]));
                    this._eMPLEADOTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591